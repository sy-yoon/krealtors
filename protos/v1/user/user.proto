// protos/v1/user/user.proto
//protoc -I . --go_out . --go_opt paths=source_relative --go-grpc_out . --go-grpc_opt paths=source_relative protos/v1/user/user.proto


syntax = "proto3";

package v1.user;

import "google/protobuf/empty.proto";
import "protos/v1/common/common.proto";

option go_package = "github.com/sy-yoon/krealtors/protos/v1/user";

service UserService {
    rpc GetUser(GetUserRequest) returns (User);
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
    rpc CreateUser(User) returns (User);
    rpc UpdateUser(User) returns (User);
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

message User {
    string user_id = 1;
    string password = 2;
    string name = 3;
    string email = 4;
    string locale = 5;
    string region_id = 6;
    string o_token = 7;
    string r_token = 8;
    string sns_provider = 9;
    string start_date = 10;
    string end_date = 11;
}

message ListUsersRequest {
    v1.common.ListParameters list_parameters = 1;
}

message ListUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
    string user_id = 1;
}

message DeleteUserRequest {
    string user_id = 1;
}

/*
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" xorm:"usr_id"`
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty" xorm:"password"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" xorm:"usr_nm"`
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty" xorm:"email"`
	Locale      string `protobuf:"bytes,5,opt,name=locale,proto3" json:"locale,omitempty" xorm:"locale"`
	RegionId    string `protobuf:"bytes,6,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty" xorm:"rgn_id"`
	OToken      string `protobuf:"bytes,7,opt,name=o_token,json=oToken,proto3" json:"o_token,omitempty" xorm:"o_tkn"`
	RToken      string `protobuf:"bytes,8,opt,name=r_token,json=rToken,proto3" json:"r_token,omitempty" xorm:"r_tkn"`
	SnsProvider string `protobuf:"bytes,9,opt,name=sns_provider,json=snsProvider,proto3" json:"sns_provider,omitempty" xorm:"sns_prvd"`
	StartDate   string `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" xorm:"-"`
	EndDate     string `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" xorm:"-"`
}

func (x *User) TableName() string {
	return "usr"
}
*/