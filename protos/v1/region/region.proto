// protos/v1/user/user.proto
//protoc -I . --go_out . --go_opt paths=source_relative --go-grpc_out . --go-grpc_opt paths=source_relative protos/v1/region/region.proto


syntax = "proto3";

package v1.region;

import "google/protobuf/empty.proto";
import "protos/v1/common/common.proto";

option go_package = "github.com/sy-yoon/krealtors/protos/v1/region";

message Country {
    string id = 1;
    string name = 2;
    string currency = 3;
    bool open = 4;
    string created_date = 5;
    string updated_date = 6;
}

message Province {
    string id = 1;
    string name = 2;
    string country_id = 3;
    bool open = 4;
    string created_date = 5;
    string updated_date = 6;
}

message City {
    string id = 1;
    string name = 2;
    string province_id = 3;
    bool open = 4;
    string created_date = 5;
    string updated_date = 6;
}

service RegionService {
    rpc GetCountry(GetCountryRequest) returns (Country);
    rpc ListCountries(ListCountriesRequest) returns (ListCountriesResponse);
    rpc CreateCountry(Country) returns (Country);
    rpc UpdateCountry(Country) returns (Country);
    rpc DeleteCountry(DeleteCountryRequest) returns (google.protobuf.Empty);
    
    rpc GetProvince(GetProvinceRequest) returns (Province);
    rpc ListProvincies(ListProvinciesRequest) returns (ListProvinciesResponse);
    rpc CreateProvince(Province) returns (Province);
    rpc UpdateProvince(Province) returns (Province);
    rpc DeleteProvince(DeleteProvinceRequest) returns (google.protobuf.Empty);

    rpc GetCity(GetCityRequest) returns (City);
    rpc ListCities(ListCitiesRequest) returns (ListCitiesResponse);
    rpc CreateCity(City) returns (City);
    rpc UpdateCity(City) returns (City);
    rpc DeleteCity(DeleteCityRequest) returns (google.protobuf.Empty);
    
}

message GetCountryRequest {
    string country_id = 1;
}

message ListCountriesRequest {
    v1.common.ListParameters query = 1;
}

message ListCountriesResponse {
  repeated Country countries = 1;
}

message DeleteCountryRequest {
    string country_id = 1;
}

message GetProvinceRequest {
    string province_id = 1;
}

message ListProvinciesRequest {
    v1.common.ListParameters query = 1;
}

message ListProvinciesResponse {
  repeated Province provincies = 1;
}

message DeleteProvinceRequest {
    string province_id = 1;
}

message GetCityRequest {
    string city_id = 1;
}

message ListCitiesRequest {
    v1.common.ListParameters query = 1;
}

message ListCitiesResponse {
  repeated City cities = 1;
}

message DeleteCityRequest {
    string city_id = 1;
}

/*
type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountyId    string `protobuf:"bytes,1,opt,name=county_id,json=countyId,proto3" json:"county_id,omitempty" xorm:"cntry_id"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" xorm:"cntry_nm"`
	Currency    string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty" xorm:"crrcy"`
	Open        bool   `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty"  xorm:"open"`
	CreatedDate string `protobuf:"bytes,5,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty" xorm:"-"`
	UpdatedDate string `protobuf:"bytes,6,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty" xorm:"-"`
}

type Province struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceId  string `protobuf:"bytes,1,opt,name=province_id,json=provinceId,proto3" json:"province_id,omitempty" xorm:"prvnc_id"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" xorm:"prvnc_nm"`
	CountryId   string `protobuf:"bytes,3,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty" xorm:"cntry_id"`
	Open        bool   `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty"  xorm:"open"`
	CreatedDate string `protobuf:"bytes,5,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty" xorm:"-"`
	UpdatedDate string `protobuf:"bytes,6,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty" xorm:"-"`
}

type City struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId      string `protobuf:"bytes,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty" xorm:"city_id"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"  xorm:"city_nm"`
	ProvinceId  string `protobuf:"bytes,3,opt,name=province_id,json=provinceId,proto3" json:"province_id,omitempty" xorm:"prvnc_id"`
	Open        bool   `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty" xorm:"open"`
	CreatedDate string `protobuf:"bytes,5,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty" xorm:"-"`
	UpdatedDate string `protobuf:"bytes,6,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty" xorm:"-"`
}
func (x *City) TableName() string{
	return "city"
}

*/