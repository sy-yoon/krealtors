// protos/v1/user/user.proto
//protoc -I . --go_out . --go_opt paths=source_relative --go-grpc_out . --go-grpc_opt paths=source_relative protos/g1/region/region.proto
//protoc -I . --grpc-gateway_out . --grpc-gateway_opt logtostderr=true --grpc-gateway_opt paths=source_relative --grpc-gateway_opt generate_unbound_methods=true protos/g1/region/region.proto

syntax = "proto3";

package v1.region;

option go_package = "github.com/sy-yoon/krealtors/protos/g1/region";

import "google/api/annotations.proto"; // 추가된 부분
import "google/protobuf/empty.proto";
import "protos/v1/common/common.proto";

service RegionService {
    rpc GetCountry(GetCountryRequest) returns (Country){
        option (google.api.http) = {
            get: "/v1/region/countries/{country_id}"  // 추가된 부분
        };
    }

    rpc ListCountries(ListCountriesRequest) returns (ListCountriesResponse){
        option (google.api.http) = {
            get: "/v1/region/countries"
        };
    }

    rpc CreateCountry(Country) returns (Country){
        option (google.api.http) = {
            post: "/v1/region/countries"
        };
    }

    rpc UpdateCountry(Country) returns (Country){
        option (google.api.http) = {
            patch: "/v1/region/countries"
        };
    }

    rpc DeleteCountry(DeleteCountryRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/v1/region/countries/{country_id}"
        };
    }
    
    rpc GetProvince(GetProvinceRequest) returns (Province){
        option (google.api.http) = {
            get: "/v1/region/provincies/{province_id}"
        };
    }

    rpc ListProvincies(ListProvinciesRequest) returns (ListProvinciesResponse){
        option (google.api.http) = {
            get: "/v1/region/provincies"
        };
    }

    rpc CreateProvince(Province) returns (Province){
        option (google.api.http) = {
            post: "/v1/region/provincies"
        };
    }

    rpc UpdateProvince(Province) returns (Province){
        option (google.api.http) = {
            patch: "/v1/region/provincies"
        };
    }

    rpc DeleteProvince(DeleteProvinceRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/v1/region/provincies"
        };
    }

    rpc GetCity(GetCityRequest) returns (City){
        option (google.api.http) = {
            get: "/v1/region/cities/{city_id}"
        };
    }

    rpc ListCities(ListCitiesRequest) returns (ListCitiesResponse){
        option (google.api.http) = {
            get: "/v1/region/cities"
        };
    }

    rpc CreateCity(City) returns (City){
        option (google.api.http) = {
            post: "/v1/region/cities"
        };
    }

    rpc UpdateCity(City) returns (City){
        option (google.api.http) = {
            patch: "/v1/region/cities"
        };
    }

    rpc DeleteCity(DeleteCityRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/v1/region/cities"
        };
    }
}
message Country {
    string county_id = 1;
    string name = 2;
    string currency = 3;
    bool open = 4;
    string created_date = 5;
    string updated_date = 6;
}

message Province {
    string province_id = 1;
    string name = 2;
    string country_id = 3;
    bool open = 4;
    string created_date = 5;
    string updated_date = 6;
}

message City {
    string city_id = 1;
    string name = 2;
    string province_id = 3;
    bool open = 4;
    string created_date = 5;
    string updated_date = 6;
}

message GetCountryRequest {
    string country_id = 1;
}

message ListCountriesRequest {
    v1.common.ListParameters list_parameters = 1;
}

message ListCountriesResponse {
  repeated Country countries = 1;
}

message DeleteCountryRequest {
    string country_id = 1;
}

message GetProvinceRequest {
    string province_id = 1;
}

message ListProvinciesRequest {
    v1.common.ListParameters list_parameters = 1;
}

message ListProvinciesResponse {
  repeated Province provincies = 1;
}

message DeleteProvinceRequest {
    string province_id = 1;
}

message GetCityRequest {
    string city_id = 1;
}

message ListCitiesRequest {
    v1.common.ListParameters list_parameters = 1;
}

message ListCitiesResponse {
  repeated City cities = 1;
}

message DeleteCityRequest {
    string city_id = 1;
}
