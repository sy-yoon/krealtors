// protos/v1/user/user.proto
//protoc -I . --go_out . --go_opt paths=source_relative --go-grpc_out . --go-grpc_opt paths=source_relative protos/g1/user/user.proto
//protoc -I . --grpc-gateway_out . --grpc-gateway_opt logtostderr=true --grpc-gateway_opt paths=source_relative --grpc-gateway_opt generate_unbound_methods=true protos/g1/user/user.proto

syntax = "proto3";

package v1.user;

option go_package = "github.com/sy-yoon/krealtors/protos/g1/user";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protos/v1/common/common.proto";

service UserService {
    rpc GetUser(GetUserRequest) returns (User) {
        option (google.api.http) = {
            get: "/v1/users/{id}"
        };
    }
    rpc GetUserByEmail(GetUserRequest) returns (User) {
        option (google.api.http) = {
            get: "/v1/users/{email}"
        };
    }
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            get: "/v1/users" 
        };
    }
    rpc CreateUser(User) returns (User) {
        option (google.api.http) = {
            post: "/v1/users"
            body: "*"
        };
    }
    rpc UpdateUser(User) returns (User) {
        option (google.api.http) = {
            patch: "/v1/users"
            body: "*"
        };
    }
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/users/{id}"
        };
    }
}

message User {
    int64 id = 1;
    string password = 2;
    string name = 3;
    string email = 4;
    string photourl = 5;
    string locale = 6;
    string sns_provider = 7;
    string created_date = 8;
    string updated_date = 9;
}

message ListUsersRequest {
    v1.common.ListParameters query = 1;
}

message ListUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
    int64 id = 1;
    string email = 2;
}

message DeleteUserRequest {
    int64 id = 1;
}
